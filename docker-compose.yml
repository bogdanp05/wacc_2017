version: '2'

networks:
  internal-net:
    driver: bridge

volumes:
  mongo-vol: {}
  cassandra-vol: {}  
 
services:

  mongodb-1:
    image: mongo:3.4
    networks:
      - internal-net
    volumes:
      - mongo-vol:/data/db
    # environment:
      # - MONGODB_REPLICA_SET_MODE=primary

  mongodb-2:
    image: mongo:3.4
    networks:
      - internal-net
    volumes:
      - mongo-vol:/data/db
    depends_on:
      - mongodb-1
    environment:
      # - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-1

  mongodb-3:
    image: mongo:3.4
    networks:
      - internal-net
    volumes:
      - mongo-vol:/data/db
    depends_on:
      - mongodb-1
    environment:
      # - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodb-1


  cassandra1:
    image: cassandra:3.0
    container_name: cassandra1
    networks:
      - internal-net
    ports:
      - "9042:9042"
    volumes:
      - cassandra-vol:/cassandraDB/data/db

  cassandra2:
    image: cassandra:3.0
    container_name: cassandra2
    networks:
      - internal-net
    volumes:
      - cassandra-vol:/cassandraDB/data/db
    links:
     - cassandra1:seed
    environment:
     - CASSANDRA_SEEDS=seed

  cassandra3:
    image: cassandra:3.0
    container_name: cassandra3
    networks:
      - internal-net
    volumes:
      - cassandra-vol:/cassandraDB/data/db
    links:
     - cassandra1:seed
    environment:
     - CASSANDRA_SEEDS=seed


  # Build the container using the Dockerfile provided by Play Framework
  backend:
      build: ./backend/target/docker/stage
      ports:
            - "9000:9000"
      networks:
            - internal-net
      environment:
            - MONGO_ENV= "mongodb://mongo:27017/tweetsdb"
            - CASSANDRA_ENV= "cassandradb://cassandra:9042"

  # Build the container using the client Dockerfile
  client:
       build: ./twitter-analysis-frontend
       # ports:
       #    - "4200:4200"
       # networks:
       #    - isolation-network

  # Build the container using the nginx Dockerfile
  nginx:
    build: ./nginx
    # Map Nginx port 80 to the local machine's port 4200
    ports:
      - "4200:80"
      # - "9000:9000"  
    # Link the client container so that Nginx will have access to it
    links:
      - backend
      - client
